@import "settings.scss";

/*
 * left and right classes to be extended / used
 */
.left, .right{
    width: 50%;
}
.left{
    float: left;
}
.right{
    float: right;
}

/*
 * Centers the element horizontally within its parent
 * ~ resets the elements transform css property
 */
@mixin horizontal-center{
	position: relative;
    left: 50%;
    transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    -moz-transform: translateX(-50%);
    -webkit-transform: translateX(-50%);
    -o-transform: translateX(-50%);
}

/*
 * Centers the element vertical within its parent
 * ~ resets the elements transform css property
 */
@mixin vertical-center{
    position: relative;
    top: 50%;
    transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    -moz-transform: translateY(-50%);
    -webkit-transform: translateY(-50%);
    -o-transform: translateY(-50%);
}

/*
 * Centers the element vertically & horizontally within its parent
 * ~ resets the elements transform css property
 */
@mixin total-center{
    position: relative;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -o-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
}

/*
 * Cross browser translateX
 * ~ resets the elements transform css property
 */
@mixin translateX($percent){
    position: relative;
    transform: translateX($percent);
    -ms-transform: translateX($percent);
    -moz-transform: translateX($percent);
    -webkit-transform: translateX($percent);
    -o-transform: translateX($percent);
}

/*
 * Cross browser translateY
 * ~ resets the elements transform css property
 */
@mixin translateY($percent){
    position: relative;
    transform: translateY($percent);
    -ms-transform: translateY($percent);
    -moz-transform: translateY($percent);
    -webkit-transform: translateY($percent);
    -o-transform: translateY($percent);
}

/*
 * Cross browser rotate
 * ~ resets the elements transform css property
 */
@mixin rotate($degrees){
    transform: rotate($degrees);
    -webkit-transform: rotate($degrees);
    -ms-transform: rotate($degrees);
    -moz-transform: rotate($degrees);
    -o-transform: rotate($degrees);
}

/*
 * Sets background image to url and covers background and centers
 */
@mixin background-image($url){
    background-image: url($url);
    background-size: cover;
    background-position: center;
}

/*
 * Floats element and all it's children left
 */
@mixin float-children{
    float: left;
    *{
        float: left;
    }
}

/*
 * CSS selector to apply to cross browser inputs
 */
@mixin placeholder {
    &::-webkit-input-placeholder {@content}
    &:-moz-placeholder           {@content}
    &::-moz-placeholder          {@content}
    &:-ms-input-placeholder      {@content}
}

/*
 * Sets element to 100vh height and 100% width
 */
@mixin layout-fullscreen{
    width: 100%;
    height: 100vh;
}

/*
 *  Sets element to 100% width
 */
@mixin layout-fullwidth{
    width: 100%;
}

/*
 * Sets width to Frame_Width and horizonally centers it
 */
@mixin layout-frame($width: $Frame_Width){
	width: $width;
	float: left;
    @include horizontal-center;
    @media screen and (max-width: $width){
        width: 90%;
    }
}

/*
 * Sets width to Full width and sets child class
 */
@mixin layout-frame-inner($width: $Frame_Width){
    @include layout-fullwidth;
    > .inner{
		@include layout-frame($width);
    }
}

@mixin linear-gradient($direction, $color-stops...) {
    background: nth(nth($color-stops, 1), 1);
    background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
    background: linear-gradient($direction, $color-stops);
  }
